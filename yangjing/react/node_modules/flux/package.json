{
  "_args": [
    [
      {
        "raw": "flux@^3.1.2",
        "scope": null,
        "escapedName": "flux",
        "name": "flux",
        "rawSpec": "^3.1.2",
        "spec": ">=3.1.2 <4.0.0",
        "type": "range"
      },
      "E:\\1000phone\\course\\React"
    ]
  ],
  "_cnpm_publish_time": 1501285151000,
  "_from": "flux@^3.1.2",
  "_hasShrinkwrap": false,
  "_id": "flux@3.1.3",
  "_location": "/flux",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/flux-3.1.3.tgz_1501285150884_0.007948780432343483"
  },
  "_npmUser": {
    "name": "kyldvs",
    "email": "kyldvs@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "flux@^3.1.2",
    "scope": null,
    "escapedName": "flux",
    "name": "flux",
    "rawSpec": "^3.1.2",
    "spec": ">=3.1.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "http://registry.npm.taobao.org/flux/download/flux-3.1.3.tgz",
  "_shasum": "d23bed515a79a22d933ab53ab4ada19d05b2f08a",
  "_shrinkwrap": null,
  "_spec": "flux@^3.1.2",
  "_where": "E:\\1000phone\\course\\React",
  "author": {
    "name": "Facebook"
  },
  "bugs": {
    "url": "https://github.com/facebook/flux/issues"
  },
  "contributors": [
    {
      "name": "Jing Chen",
      "email": "jingc@fb.com"
    },
    {
      "name": "Bill Fisher",
      "email": "fisherwebdev@gmail.com"
    },
    {
      "name": "Paul O'Shannessy",
      "email": "paul@oshannessy.com"
    },
    {
      "name": "Kyle Davis",
      "email": "kyldvs@gmail.com"
    }
  ],
  "dependencies": {
    "fbemitter": "^2.0.0",
    "fbjs": "^0.8.0"
  },
  "description": "An application architecture based on a unidirectional data flow",
  "devDependencies": {
    "babel-core": "^5.8.22",
    "babel-loader": "^5.3.2",
    "del": "^2.2.0",
    "fbjs-scripts": "^0.5.0",
    "gulp": "^3.9.0",
    "gulp-babel": "^5.1.0",
    "gulp-flatten": "^0.2.0",
    "gulp-header": "1.8.2",
    "gulp-rename": "^1.2.2",
    "gulp-util": "^3.0.6",
    "immutable": "^3.7.4",
    "jest": "^15.1.1",
    "object-assign": "^4.0.1",
    "react": "^15.0.2",
    "react-addons-test-utils": "^15.0.1",
    "react-dom": "^15.0.1",
    "run-sequence": "^1.1.0",
    "vinyl-source-stream": "^1.0.0",
    "webpack": "^1.11.0",
    "webpack-stream": "^3.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d23bed515a79a22d933ab53ab4ada19d05b2f08a",
    "size": 68965,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/flux/download/flux-3.1.3.tgz"
  },
  "files": [
    "LICENSE",
    "PATENTS",
    "README.md",
    "index.js",
    "lib",
    "utils.js",
    "dist"
  ],
  "gitHead": "520a60c18aa3e9af59710d45cd37b9a6894a7bce",
  "homepage": "http://facebook.github.io/flux/",
  "jest": {
    "modulePathIgnorePatterns": [
      "/lib/",
      "/node_modules/"
    ],
    "preprocessorIgnorePatterns": [
      "/node_modules/"
    ],
    "rootDir": "./",
    "scriptPreprocessor": "scripts/jest/preprocessor.js",
    "setupFiles": [
      "scripts/jest/environment.js"
    ],
    "testPathDirs": [
      "<rootDir>/src"
    ]
  },
  "keywords": [
    "flux",
    "react",
    "facebook",
    "dispatcher"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "kyldvs",
      "email": "kyldvs@gmail.com"
    }
  ],
  "name": "flux",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.0.2 || ^16.0.0-beta || ^16.0.0"
  },
  "publish_time": 1501285151000,
  "readme": "# Flux\nAn application architecture for React utilizing a unidirectional data flow.\n\n<img src=\"./docs/img/flux-diagram-white-background.png\" style=\"width: 100%;\" />\n\n## Getting Started\n\nStart by looking through the [guides and examples](./examples) on Github. For more resources and API docs check out [facebook.github.io/flux](http://facebook.github.io/flux).\n\n## How Flux works\n\nFor more information on how Flux works check out the [Flux Concepts](./examples/flux-concepts) guide, or the [In Depth Overview](https://facebook.github.io/flux/docs/in-depth-overview.html#content).\n\n## Requirements\nFlux is more of a pattern than a framework, and does not have any hard dependencies.  However, we often use [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter) as a basis for `Stores` and [React](https://github.com/facebook/react) for our `Views`.  The one piece of Flux not readily available elsewhere is the `Dispatcher`.  This module, along with some other utilities, is available here to complete your Flux toolbox.\n\n## Installing Flux\nFlux is available as a [npm module](https://www.npmjs.org/package/flux), so you can add it to your package.json file or run `npm install flux`.  The dispatcher will be available as `Flux.Dispatcher` and can be required like this:\n\n```javascript\nconst Dispatcher = require('flux').Dispatcher;\n```\n\nTake a look at the [dispatcher API and some examples](http://facebook.github.io/flux/docs/dispatcher.html#content).\n\n## Flux Utils\n\nWe have also provided some basic utility classes to help get you started with Flux. These base classes are a solid foundation for a simple Flux application, but they are **not** a feature-complete framework that will handle all use cases. There are many other great Flux frameworks out there if these utilities do not fulfill your needs.\n\n```js\nimport {ReduceStore} from 'flux/utils';\n\nclass CounterStore extends ReduceStore<number> {\n  getInitialState(): number {\n    return 0;\n  }\n\n  reduce(state: number, action: Object): number {\n    switch (action.type) {\n      case 'increment':\n        return state + 1;\n\n      case 'square':\n        return state * state;\n\n      default:\n        return state;\n    }\n  }\n}\n```\n\nCheck out the [examples](./examples) and [documentation](https://facebook.github.io/flux/docs/flux-utils.html) for more information.\n\n## Building Flux from a Cloned Repo\nClone the repo and navigate into the resulting `flux` directory.  Then run `npm install`.\n\nThis will run [Gulp](http://gulpjs.com/)-based build tasks automatically and produce the file Flux.js, which you can then require as a module.\n\nYou could then require the Dispatcher like so:\n\n```javascript\nconst Dispatcher = require('path/to/this/directory/Flux').Dispatcher;\n```\n\nThe build process also produces de-sugared versions of the `Dispatcher` and `invariant` modules in a `lib` directory, and you can require those modules directly, copying them into whatever directory is most convenient for you.  The flux-todomvc and flux-chat example applications both do this.\n\n## Join the Flux community\nSee the [CONTRIBUTING](/CONTRIBUTING.md) file for how to help out.\n\n## License\nFlux is BSD-licensed. We also provide an additional patent grant.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/flux.git"
  },
  "scripts": {
    "build": "gulp build",
    "prepublish": "gulp publish",
    "test": "NODE_ENV=test jest"
  },
  "version": "3.1.3"
}
